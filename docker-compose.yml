services:
  mu_groups_ms:
    build:
      context: .
      args:
        MODE: ${mu_groups_ms_MODE:-release}

    container_name: ${mu_groups_ms_HOSTNAME:-mu_groups_ms}

    hostname: ${mu_groups_ms_HOSTNAME:-mu_groups_ms}

    # Ports exposed to OTHER SERVICES but NOT the HOST machine
    expose:
      - ${mu_groups_ms_INTERNAL_PORT:-8008}

    environment:
      # `DATABASE_URL` is constructed from the `mu_groups_db` variables, like this:
      #   postgresql://{user}:{password}@{hostname}:{port}/{db}?sslmode=disable
      DATABASE_URL: postgresql://${mu_groups_db_USER:-postgres}:${mu_groups_db_PASSWORD:-meetUN}@${mu_groups_db_HOSTNAME:-mu_groups_db}:${mu_groups_db_INTERNAL_PORT:-5432}/${mu_groups_db_DB:-meetun}?sslmode=disable
      PORT: ${mu_groups_ms_INTERNAL_PORT:-8008}
      LOCALHOST: ${mu_groups_ms_HOSTNAME:-mu_groups_ms}

    depends_on:
      - mu_groups_db

    ports:
      - ${mu_groups_ms_EXTERNAL_PORT:-8008}:${mu_groups_ms_INTERNAL_PORT:-8008}

  mu_groups_db:
    image: postgres:17-alpine

    # Hostname for which the service will be reachable
    hostname: ${mu_groups_db_HOSTNAME:-mu_groups_db}

    container_name: ${mu_groups_db_HOSTNAME:-mu_groups_db}

    # Ports exposed to OTHER SERVICES but NOT the HOST machine
    expose:
      - ${mu_groups_db_INTERNAL_PORT:-5432}

    restart: always
    environment:
      POSTGRES_USER: ${mu_groups_db_USER:-postgres}
      POSTGRES_PASSWORD: ${mu_groups_db_PASSWORD:-meetUN}
      POSTGRES_DB: ${mu_groups_db_DB:-meetun}
      PGPORT: ${mu_groups_db_INTERNAL_PORT:-5432}
    volumes:
      - mu-groups-db-data:/var/lib/postgresql/data

    command: ["postgres", "-c", "max_prepared_transactions=100", "-c", "max_connections=200"]

volumes:
  mu-groups-db-data:
